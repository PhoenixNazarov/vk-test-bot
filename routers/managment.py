from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

from modules.cleaner.cleaner_service import CleanerService
from modules.passwords.passwords_service import PasswordsService

router = Router()


@router.message(Command(commands=['set']))
async def set_password(message: Message, password_service: PasswordsService, cleaner_service: CleanerService):
    await cleaner_service.delete_message(message)
    if len(message.text.split(" ")) != 3:
        return await message.answer(f"‚öôÔ∏è –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π /set, –Ω–∞–ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –Ω–∞–∑–≤–∞–Ω–∏–µ "
                                    f"—Å–µ—Ä–≤–∏—Å–∞ –∏ –ø–∞—Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å")

    service = message.text.split(" ")[1]
    password = message.text.split(" ")[2]
    await password_service.set_password(message.from_user.id, service, password)
    await message.answer(f"üíæ –ü–∞—Ä–æ–ª—å –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ <b>{service}</b> —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")


@router.message(Command(commands=['get']))
async def get_password(message: Message, password_service: PasswordsService, cleaner_service: CleanerService):
    if len(message.text.split(" ")) != 2:
        return await message.answer(f"‚öôÔ∏è –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π /get, –Ω–∞–ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –Ω–∞–∑–≤–∞–Ω–∏–µ "
                                    f"—Å–µ—Ä–≤–∏—Å–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª—å")

    service = message.text.split(" ")[1]
    password = await password_service.get_password(message.from_user.id, service)
    if password:
        message = await message.answer(f"üßë‚Äçüíª –ü–∞—Ä–æ–ª—å –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ <b>{service}</b>: <code>{password}</code>")
        await cleaner_service.delete_message(message)
    else:
        await message.answer(f"ü´ó –ü–∞—Ä–æ–ª—å –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ <b>{service}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω")


@router.message(Command(commands=['del']))
async def del_password(message: Message, password_service: PasswordsService):
    if len(message.text.split(" ")) != 2:
        return await message.answer(f"‚öôÔ∏è –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π /get, –Ω–∞–ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –Ω–∞–∑–≤–∞–Ω–∏–µ "
                                    f"—Å–µ—Ä–≤–∏—Å–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–∞—Ä–æ–ª—å")

    service = message.text.split(" ")[1]
    if not await password_service.del_password(message.from_user.id, service):
        await message.answer(f"ü´ó –ü–∞—Ä–æ–ª—å –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ <b>{service}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω")
    else:
        await message.answer(f"üóë –ü–∞—Ä–æ–ª—å –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ <b>{service}</b> –±—ã–ª —É–¥–∞–ª—ë–Ω!")
